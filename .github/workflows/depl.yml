name: Terraform AWS Deployments and Docker Build/Push

on:
  push:
    branches:
      - siri
      
jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    env:
      TF_VERSION: "1.5.7"  # Replace with your preferred Terraform version

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"  # Replace with your preferred region

      - name: Terraform Init 
        run: |
          cd TerraformInfrastructure
          terraform init 

      - name: Terraform Workspace - Create and Select
        run: |
          cd TerraformInfrastructure
          terraform workspace new Staging || true
          terraform workspace select Staging

      - name: Terraform Validate
        run: |
          cd TerraformInfrastructure
          terraform validate 

      - name: Terraform Plan
        run: |
          cd TerraformInfrastructure
          terraform plan -var-file=environments/staging.tfvars

      - name: Terraform Apply
        run: |
          cd TerraformInfrastructure
          terraform apply -auto-approve -var-file=environments/staging.tfvars
          
  build-and-push:
    needs: terraform-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          cd WebApplication
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your AWS region

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          cd WebAppApplication
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 571888835380.dkr.ecr.us-east-1.amazonaws.com
          docker build -t python-repo .
          docker tag python-repo:latest 571888835380.dkr.ecr.us-east-1.amazonaws.com/python-repo:latest
          docker push 571888835380.dkr.ecr.us-east-1.amazonaws.com/python-repo:latest
